From user1

#git init --> to make a directory working or initialize
#git status --> to check status like what files are ready to stage or commit or push
#git add . --> add to staging area
# git commit -m "commit message" --> commiting or saving or snapshoting to local repo
#git log --> check all commit details with commit ids
#git show <commit_id> --> check content of a particular commit
#git add remote origin <repo_url> --> handshake between remote and origin/remote and local repo
#git push -u origin master or git push origin master --> pushing into central/remote repo
//give username and token as password for authentication 

From user2
#git clone <repository line> // for first time entire directory can be cloned
#git init 
#git add remote origin <repository link>
#git pull origin master --> to pull content from remote repo
//update the changes and push back to the repository.


//
#vi .gitignore --> create a hidden file with the same name and
write like *.css *.py *.java to skip all files ending with mentioned extensions
then quit
#git add .gitignore --> add it to staging area
# touch file1.txt file2.css file3.py file4.java --> make changes or create something
#git add . --> add the changes to staging area
#git commit -m "message" --> commit to local repo
git push origin master --> now push it to remote repo

Note --> only files not ending with mentioned extensions will be pushed or committed.

#git log --> details of all commit
#git log -1 --> only latest commit
#git log -2 --> last 2 commits
#git log --oneline --> each commit in single line
#git log -grep "ignore" --> commit that contains ignore word
#git log -grep "commit" --> look for word commit in commit details.

//Note: local repo does not need to handshake with remote repo everytime we push or pull
//Note: we can clone for the first



